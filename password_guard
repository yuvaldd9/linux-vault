#!/bin/bash

source /bin/guard_scripts/consts.sh
source /bin/guard_scripts/initiate_system.sh


open_vault

JSON_FILE=$VAULT_FILE_PATH

# Function to display script usage
usage() {
    echo "Usage: $0 [options] <function>"
    echo "Options:"
    echo "  -h, --help       Display this help message"
    echo "Functions:"
    echo "  add_key <key> <value>    Add a key-value pair to the JSON file"
    echo "  read_key <key>           Read the value of a key from the JSON file"
    echo "  delete_key <key>         Delete a key from the JSON file"
}

# Function to add a key-value pair to the JSON file
add_key() {
    local key="$1"
    local value="$2"

    jq --arg key "$key" --arg value "$value" '. + {($key): $value}' "$JSON_FILE" > temp_file && mv temp_file "$JSON_FILE"
}

# Function to read the value of a key from the JSON file
read_key() {
    local key="$1"

    jq --arg key "$key" '.[$key]' "$JSON_FILE"
}

# Function to delete a key from the JSON file
delete_key() {
    local key="$1"

    jq "del(.[$key])" "$JSON_FILE" > temp_file && mv temp_file "$JSON_FILE"
}

# Verify script arguments
if [ "$#" -lt 1 ]; then
    echo "Error: Function not specified."
    usage
fi

case "$1" in
    -h|--help)
        usage
        ;;
    add_key)
        if [ "$#" -ne 3 ]; then
            echo "Error: Invalid number of arguments for add_key."
            usage
        fi
        add_key "$2" "$3"
        ;;
    read_key)
        if [ "$#" -ne 2 ]; then
            echo "Error: Invalid number of arguments for read_key."
            usage
        fi
        read_key "$2"
        ;;
    delete_key)
        if [ "$#" -ne 2 ]; then
            echo "Error: Invalid number of arguments for delete_key."
            usage
        fi
        delete_key "$2"
        ;;
    *)
        echo "Error: Unknown function '$1'."
        usage
        ;;
esac


close_vault
